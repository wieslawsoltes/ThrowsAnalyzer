{
  "permissions": {
    "allow": [
      "Bash(dotnet new:*)",
      "Bash(dotnet sln:*)",
      "Bash(dotnet sln add:*)",
      "Bash(dotnet add:*)",
      "Bash(rm:*)",
      "Bash(dotnet build:*)",
      "Bash(dotnet test)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git log:*)",
      "Bash(git restore:*)",
      "Bash(dotnet run:*)",
      "WebSearch",
      "Bash(dotnet test:*)",
      "Bash(dotnet pack:*)",
      "Bash(unzip:*)",
      "Bash(dotnet clean:*)",
      "Bash(/dev/null)",
      "Bash(tree:*)",
      "Bash(xargs:*)",
      "Bash(cat:*)",
      "Bash(sort:*)",
      "Bash(open:*)",
      "Read(//Users/wieslawsoltes/Downloads/AvaloniaApplicationTestExc/AvaloniaApplicationTestExc/**)",
      "Bash(find:*)",
      "Bash(git checkout:*)",
      "Bash(for file in src/ThrowsAnalyzer/Analyzers/AsyncVoidThrowAnalyzer.cs src/ThrowsAnalyzer/Analyzers/UnobservedTaskExceptionAnalyzer.cs)",
      "Bash(do echo \"=== $file ===\" grep \"AsyncMethodDetector\\.\" \"$file\")",
      "mcp__ide__getDiagnostics",
      "Read(//Users/wieslawsoltes/.nuget/packages/throwsanalyzer/1.0.0-beta.1/**)",
      "Bash(dotnet list:*)",
      "Bash(test:*)",
      "Bash(dotnet restore:*)",
      "Read(//Users/wieslawsoltes/.nuget/packages/microsoft.codeanalysis.testing.verifiers.xunit/**)",
      "Read(//Users/wieslawsoltes/.nuget/packages/microsoft.codeanalysis.csharp.analyzer.testing.xunit/**)",
      "Bash(for:*)",
      "Bash(do sed -i '' 's/private static readonly DiagnosticDescriptor/public static readonly DiagnosticDescriptor/g' \"$file\")",
      "Bash(done)",
      "Bash(do)",
      "Bash(if ! grep -q \"using DisposableAnalyzer.Analyzers;\" \"$file\")",
      "Bash(then)",
      "Bash(fi)",
      "Read(//Users/wieslawsoltes/.nuget/packages/microsoft.codeanalysis.common/4.12.0/**)",
      "Bash(wc:*)",
      "Bash(dotnet script:*)",
      "Read(//Users/wieslawsoltes/.nuget/packages/microsoft.codeanalysis.csharp.codefix.testing.xunit/1.1.2/**)",
      "Bash(awk:*)"
    ],
    "deny": [],
    "ask": []
  }
}
