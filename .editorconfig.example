# Example .editorconfig for ThrowsAnalyzer configuration
# Copy this to your project root and customize as needed

root = true

[*.cs]

# ========================================
# Analyzer Enable/Disable Configuration
# ========================================
# Control whether each analyzer is completely enabled or disabled
# Options: true, false
# Default: true (all analyzers enabled)
# Note: Setting to false completely disables the analyzer regardless of severity settings

# Enable/disable throw statement analyzer (THROWS001)
throws_analyzer_enable_throw_statement = true

# Enable/disable unhandled throw analyzer (THROWS002)
throws_analyzer_enable_unhandled_throw = true

# Enable/disable try-catch block analyzer (THROWS003)
throws_analyzer_enable_try_catch = true


# ========================================
# Analyzer Rule Severity Configuration
# ========================================
# Control the severity of each analyzer rule
# Options: none, silent, suggestion, warning, error
# Default: warning for THROWS001 and THROWS002, info for THROWS003

# THROWS001: Detects throw statements in members
dotnet_diagnostic.THROWS001.severity = warning

# THROWS002: Detects unhandled throw statements (not wrapped in try-catch)
dotnet_diagnostic.THROWS002.severity = warning

# THROWS003: Detects try-catch blocks in members
dotnet_diagnostic.THROWS003.severity = suggestion


# ========================================
# Member Type Analysis Configuration
# ========================================
# Control which member types are analyzed
# Options: true, false
# Default: true (all member types are analyzed)

# Analyze regular methods
throws_analyzer_analyze_methods = true

# Analyze constructors
throws_analyzer_analyze_constructors = true

# Analyze destructors/finalizers
throws_analyzer_analyze_destructors = true

# Analyze operator overloads
throws_analyzer_analyze_operators = true

# Analyze conversion operators (implicit/explicit)
throws_analyzer_analyze_conversion_operators = true

# Analyze properties (expression-bodied properties)
throws_analyzer_analyze_properties = true

# Analyze property accessors (get, set, init, add, remove)
throws_analyzer_analyze_accessors = true

# Analyze local functions
throws_analyzer_analyze_local_functions = true

# Analyze lambda expressions
throws_analyzer_analyze_lambdas = true

# Analyze anonymous methods (delegate { } syntax)
throws_analyzer_analyze_anonymous_methods = true


# ========================================
# Example: Minimal Configuration
# ========================================
# Uncomment to analyze only methods and constructors:
# throws_analyzer_analyze_methods = true
# throws_analyzer_analyze_constructors = true
# throws_analyzer_analyze_destructors = false
# throws_analyzer_analyze_operators = false
# throws_analyzer_analyze_conversion_operators = false
# throws_analyzer_analyze_properties = false
# throws_analyzer_analyze_accessors = false
# throws_analyzer_analyze_local_functions = false
# throws_analyzer_analyze_lambdas = false
# throws_analyzer_analyze_anonymous_methods = false


# ========================================
# Example: Focus on Unhandled Exceptions Only
# ========================================
# Uncomment to focus only on unhandled throws:
# throws_analyzer_enable_throw_statement = false
# throws_analyzer_enable_unhandled_throw = true
# throws_analyzer_enable_try_catch = false
# dotnet_diagnostic.THROWS002.severity = error
